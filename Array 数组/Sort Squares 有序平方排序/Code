//给你一个按非递减顺序排序的整数数组 nums，返回 每个数字的平方 组成的新数组，要求也按非递减顺序排序。

vector<int> sortedSquares(vector<int>& A)
{

	int k = A.size() - 1;
	vector<int> result(A.size(), 0);//定义一个vector存储结果
	for (int i = 0, j = A.size() - 1; i <= j;)//一头一尾两个指针
	{
		if (A[i] * A[i] < A[j] * A[j])
		{
			//原本是第一个最小的元素（负数）可能平方后变为最大的数
			result[k--] = A[j] * A[j];//先赋值
			j--;
		}
		else 
		{
			result[k--] = A[i] * A[i];
			i++;
		}
	}
	return result;

	//时间复杂度 O(n)	
}
